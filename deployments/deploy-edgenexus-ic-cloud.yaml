# kubectl apply -f deploy-edgenexus-ic-cloud.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: edgenexus-ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edgenexus-ingress
  namespace: edgenexus-ingress
---
# Source: edgenexus-ingress/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edgenexus-ingress
  namespace: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
---
# Source: edgenexus-ingress/templates/controller-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: edgenexus-ingress-default-server-tls
  namespace: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFsTVNNd0lRWURWUVFEREJwRlpHZGwKVGtWWVZWTkpibWR5WlhOelEyOXVkSEp2Ykd4bGNqQWVGdzB5TVRFd01EUXhOekkwTWpWYUZ3MHlOakV3TURReApOekkwTWpWYU1DVXhJekFoQmdOVkJBTU1Ha1ZrWjJWT1JWaFZVMGx1WjNKbGMzTkRiMjUwY205c2JHVnlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1V1ViVWY1ZU0vNm8wbm5YV093b2w3S1UKTmtNc1dPSzVLZ0tXY2I1d3lLa2hmeVNSdGQxclN5czhLN20vQmpxNHhSMGFuWFFRVmd3TDhqUk1qTFpiYzExawpKQ3Z2NjdMWU1kOGFyWGh6MEdJbzNaZ1BoanRRNGtHdnNnaldlRVFRMGs4S29DN2lGSjBXOHd3ZUp5SVJHV2VqClRMaHdXTHpiQXV3ZUJ2U2tpSE5BUGxIcGF1aXFwanpHT2dtMndMUlAvci84T25WdzVTRzVlZk9iOHcrcFQ3SW4KN3RIUG42TlBqWTVYc1RtdEtnUENwbStnUGFEVmZDcWJEczB2cEFPaWptbC9XYS91aDFPUlBLbVVza1NOVUw5bQppK044ZVI0c1FTVWIvVi9IMkxuK0llL2ZFdURWSlRma0ZRR28yb1dEQUtITkJHU29zdFd2aUF4bzF1Z1RyUUlECkFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVWZOWVZRamNzR2ZFbi8vNmlDa2tCQnV1UzA2c3dId1lEVlIwakJCZ3cKRm9BVWZOWVZRamNzR2ZFbi8vNmlDa2tCQnV1UzA2c3dEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBbUUxOC9zeWhveTN4WEMwL2cwNXk3cThoOFhQSG9uU1VNVU1MR2grTTZrQThzV1FECjR5dS8wdVA4cUNyZDBtOE9JNHNueWRQUFpjaFZLRlpSdFpNcEszY2tMVXV6WXZTcGt5M0pIdDU1aWJwL0RLd1oKTEpjd2Y1NDJkRVNtSVI1eXJUdDBoUTdXWEhFWjkzSWFrbWJKemVCZnJwQzJxdVlMNWY5dnppSUVxeVU2MnRKOQptTkJpY3haOERlWGlUbnZhbnJGbEQrdWVTcldPUFJGOVhwQlcxeXNGVmdqdjQwV1NJM1p0cHhaSXY0ZkRnbG1BCmhVMVhPTjRmMXdMUW9qb1hObk52VmtQMW5RRVBuZmd2dytHVmkreGozTnJwaGY3MEd4Nks4bWZBLzY0bnZqYlYKaVdSdHN4MzBDdmNSb2dHcEp3bUk0K2NLTGx1Mk9yNllYQUlkMXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktVd2dnU2hBZ0VBQW9JQkFRQzVaUnRSL2w0ei9xalMKZWRkWTdDaVhzcFEyUXl4WTRya3FBcFp4dm5ESXFTRi9KSkcxM1d0TEt6d3J1YjhHT3JqRkhScWRkQkJXREF2eQpORXlNdGx0elhXUWtLKy9yc3RneDN4cXRlSFBRWWlqZG1BK0dPMURpUWEreUNOWjRSQkRTVHdxZ0x1SVVuUmJ6CkRCNG5JaEVaWjZOTXVIQll2TnNDN0I0RzlLU0ljMEErVWVscTZLcW1QTVk2Q2JiQXRFLyt2L3c2ZFhEbElibDUKODV2ekQ2bFBzaWZ1MGMrZm8wK05qbGV4T2EwcUE4S21iNkE5b05WOEtwc096UytrQTZLT2FYOVpyKzZIVTVFOApxWlN5UkkxUXYyYUw0M3g1SGl4QkpSdjlYOGZZdWY0aDc5OFM0TlVsTitRVkFhamFoWU1Bb2MwRVpLaXkxYStJCkRHalc2Qk90QWdNQkFBRUNnZ0VBR1ZVYWJaSy9Wb1YybGdQMkMvMkE4bkdCVlFUS3UzNkhaSmtqNjNqbE9sWDUKOE1DVGRIRkQ1dXFLZDBNVE9ndXVFYWtQYVBKaUJRL3lWZThWZ3Fpc1NGQTdqY0cvTDhxcFJlOUJXdkM1aW9EUApLckJMZHNFR0pWUnFhSDVTcCs1TkNoK295UWgrOWVnZEthcS9PQU9zcUhjRDFramhlUTZkTW9JRy9GWlRZUjE2CjJuT1RueGtITmxaVEVrTXN1K1UyMWRldlVHcUxZMkc0NDZaYmlGK0pRZ2p1SmNsUTJSRFJLUzVDNFZzcHlac1gKZkZPVDE4V21wWitodDAraXorbDIxVytoSGRncU91NnpHcWlwa01tOGdTdGRLVGdrZFV2ZFE5YjJXTHYzMXRZeApHUzFQdThJTHNwMml3UUllM3Fqa0Vud3k1MGNvZitqTFF5bWhPVldaSVFLQmdRRGdpRTUxZE9vOGpWbGlGZFdVCkM3ZVUrczRQdHpOV0hmTUNGNTI1amVPS3BtTk9YSCtsbWtZcU4zYitZL285VVdRaTBiTXF1c3ZDOFY5ZkIwcmIKbWV6TUJEVjFGWVQ5aXZOSW9lcXZTMWlTQUdnYW9JMEw0ZzRsaFhtbGxzWTAycjNGNkQ4WGxPT0I1VzFzWjZQSwpRcFQyb2hsa0QweXF0QzdySkNjTXpvT0MrUUtCZ1FEVFlLT25rZ2luemdDbktYdzdxV2tyai9OOTRHMjB1U1NXCnNyZFZZYUFqVGdYckV6eWVwWVVhd2srYmFCNWl3b0FXLy9WZkpVOFNSdXRpdGE2VCtVV2RRT3VyYmFzblUrSlQKbWJIVFE4ZCs3czM3WHpqandaQVU2NzlML0Z3MWt2dFYxTktTZGVmWDBZeGt5b2VHV2IySENwQmY4RkZmbHhJcQpQNUNBU0ZrUFZRS0JnSGxCSXgzTFJiUHRvWmVXc3dDQVUyUGhEZWJ1eUlwNUlnSy9QaTQyc2VydWNES2hRVTN0ClFuY0ovUGpraFA4WU5UdVlnMmxQOXpvUG43RngvcnNaSlFnSVBkWTlDTlRqZFA2RWNuaTM5OXpnMjFlRjNLWE8KTGxXVS8xeXRUOXk3UkVEY2F6WVE4Y3YwV21Od2xNTmxzWXgvZmJiTGpGdWpjck1Ka3cwWGVXNEJBbjlaLzh1dQpqWDhoODVSVG1GWk5FTlMydDVQMUJKbXhXU003QnQwSWZZaXhmNGNGa0NzL1lUcExLbkM2dXBvMWNwc1hMK1JKCm5wa01MeVlKNFZGenI2NzBSYkFTVForU0h5VStjekpEd1pndmMzNUFpVXF2cnJxcUxiWkZwQzJlb2ZaaGxUd1QKSUNDV3c2SURTRGhyKzhtMnRjakRFSStWSTcyWVAzaEhKb2JGQW9HQkFNWGJDY1BxbmloMFlOSk91Y0xjSFpsVQpPNDdRMlMzSVZtSU9kc1UwbksxdEJVSEk4RUJWcmp5bzF5OTMrY3JkUmMyMXVVSVJFajlIMzFyRXBsZ1pUWnFzClIxVmw3Zm4xTDlrMUVwWEtsZ3lPQkw1dlZQS05uTzRWQmdURUppcjZZYnNqY04zTUhvR0tDaE9TR2RYL0YvMEYKeXdDemdkYmswZ1Y2RFJrbW1zTGwKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: edgenexus-ingress/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgenexus-ingress
  namespace: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
data:
---
# Source: edgenexus-ingress/templates/controller-leader-election-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: edgenexus-ingress-leader-election
  namespace: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
---
# Source: edgenexus-ingress/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - k8s.edgenexus.io
  resources:
  - virtualservers
  - virtualserverroutes
  - globalconfigurations
  - transportservers
  - policies
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - k8s.edgenexus.io
  resources:
  - virtualservers/status
  - virtualserverroutes/status
  - policies/status
  - transportservers/status
  verbs:
  - update
---
# Source: edgenexus-ingress/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
subjects:
- kind: ServiceAccount
  name: edgenexus-ingress
  namespace: edgenexus-ingress
roleRef:
  kind: ClusterRole
  name: edgenexus-ingress
  apiGroup: rbac.authorization.k8s.io
---
# Source: edgenexus-ingress/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: edgenexus-ingress
  namespace: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: 192.168.2.132
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app:  edgenexus-ingress
---
# Source: edgenexus-ingress/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edgenexus-ingress
  namespace: edgenexus-ingress
  labels:
    app.kubernetes.io/name: edgenexus-ingress
    helm.sh/chart: edgenexus-ingress-0.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edgenexus-ingress
  template:
    metadata:
      labels:
        app: edgenexus-ingress
    spec:
      serviceAccountName: edgenexus-ingress
      hostNetwork: false
      containers:
      - name: edgenexus-ingress
        image: "docker.io/edgenexus/edgenexus-ingress:latest-centos8"
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: readiness-port
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /edge-ready
            port: readiness-port
          periodSeconds: 1
        resources:
          {}
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 101 #edgenexus
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -edge-reload-timeout=300000 #ms, able to wait for changes on the ADC
          - -enable-app-protect=false
          - -edge-configmaps=$(POD_NAMESPACE)/edgenexus-ingress
          - -default-server-tls-secret=$(POD_NAMESPACE)/edgenexus-ingress-default-server-tls
          - -ingress-class=edgenexus
          - -health-status=false
          - -health-status-uri=/edge-health
          - -edge-balancer-ip=192.168.2.132
          - -edge-balancer-user=admin
          - -edge-balancer-pass=jetnexus
          - -edge-external-ip=192.168.2.135
          - -v=1
          - -edge-status=true
          - -edge-status-port=8080
          - -edge-status-allow-cidrs=127.0.0.1
          - -report-ingress-status
          - -external-service=edgenexus-ingress
          - -enable-leader-election=true
          - -leader-election-lock-name=edgenexus-ingress-leader-election
          - -enable-custom-resources=true
          - -enable-tls-passthrough=false
          - -enable-snippets=false
          - -enable-preview-policies=false
          - -ready-status=true
          - -ready-status-port=8081
          - -enable-latency-metrics=false
---
# Source: edgenexus-ingress/templates/controller-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: edgenexus
spec:
  controller: edgenexus.io/ingress-controller
